---
version: 2.1


orbs:
  terraform: twdps/terraform@0.6.0

# ==== global pipeline parameters

parameters:
  context:
    description: circleci context for all jobs
    type: string
    default: di-DR-lab

# ==== triggers

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

# ==== commands, jobs, workflows

commands:

  set-environment:
    steps:
      - run:
          name: set terraform cloud credentials
          command: |
            pwd
            cat \<<EOF > ~/.terraformrc
            credentials "app.terraform.io" {
              token = "${TFE_TOKEN}"
            }
            EOF
  store-system-credentials:
    parameters:
      region:
        type: string
    steps:
      - run:
          name: install teller
          command: |
            wget https://github.com/tellerops/teller/releases/download/v1.5.6/teller_1.5.6_Linux_x86_64.tar.gz
            sudo tar -xvf teller_1.5.6_Linux_x86_64.tar.gz
            sudo mv teller /usr/local/bin/.
      - run:
          name: write cluster kubeconfig to secrets store
          command: bash scripts/write_cluster_credentials.sh << parameters.region >>
  
  create-storage-class:
    parameters:
      region-file:
        type: string
      workspace:
        type: string
    steps:
      - run:
          name: install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/v1.26.2/bin/linux/amd64/kubectl"
            sudo chmod +x kubectl
            sudo mv -f kubectl /usr/local/bin/kubectl
      - run:
          name: install helm
          command: |
            curl -SLO "https://get.helm.sh/helm-v3.11.2-linux-amd64.tar.gz"
            tar -xf "helm-v3.11.2-linux-amd64.tar.gz"
            sudo mv -f linux-amd64/helm /usr/local/bin
      - run:
          name: set kuebconfig 
          command: |
            mkdir ~/.kube
            cat kubeconfig_di-dr-lab-<< parameters.region-file >> > ~/.kube/config
            chmod 600 ~/.kube/config
      - run:
          name: deploy aws efs-csi storage class provisioners
          command: bash scripts/deploy_efs_csi_driver.sh << parameters.region-file >>
      - run:
          name: provision cluster-wide storage class definition
          command: bash scripts/deploy_efs_storage_class.sh << parameters.region-file >> << parameters.workspace >>


workflows:
  version: 2

  continuation-generated-workflow:
    jobs:
