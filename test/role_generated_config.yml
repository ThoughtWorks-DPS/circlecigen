---
version: 2.1


orbs:
  terraform: twdps/terraform@0.6.0

# =================== global config

globals:
 - &context di-DR-lab

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

# ===================================

commands:

  set-environment:
    description: generate environment credentials and configuration from templates
    parameters:
      cluster:
        description: cluster name to use for configuration
        type: string
      source-env:
        description: .env file to source into BASH_ENV
        type: string
    steps:
      - op/env:
          env-file: << parameters.source-env >>
      - run:
          name: set ~/.terraformrc
          command: op inject -i tpl/terraformrc.tpl -o ~/.terraformrc
      - run:
          name: set << parameters.cluster >> environment variables
          command: |
            op inject -i environments/<< parameters.cluster >>.auto.tfvars.json.tpl -o << parameters.cluster >>.auto.tfvars.json

  store-system-credentials:
    parameters:
      region:
        type: string
    steps:
      - run:
          name: install teller
          command: |
            wget https://github.com/tellerops/teller/releases/download/v1.5.6/teller_1.5.6_Linux_x86_64.tar.gz
            sudo tar -xvf teller_1.5.6_Linux_x86_64.tar.gz
            sudo mv teller /usr/local/bin/.
      - run:
          name: write cluster kubeconfig to secrets store
          command: bash scripts/write_cluster_credentials.sh << parameters.region >>


jobs:

  launch-dynamic-pipeline:
    parameters:
      workflow-name:
        description: Custom name for the resulting workflow within the generated_config.yml
        type: string
      multi-config:
        description: name of the multi-environment definition/configuration file to use
        type: string
        default: multi.json
    executor: continuation/default
    steps:
      - checkout
      - run:
          name: generate continuation pipeline
          command: circlecigen --workflow << parameters.workflow-name >>
      - continuation/continue:
          configuration_path: .circleci/generated_config.yml


workflows:
  version: 2

  continuation-generated-workflow:
    jobs:
      - validate-app-values-file:
          name: plan nonprod changes
          context: *context
          role: nonprod
          filters: *on-tag-main

      - approve nonprod changes:
          type: approval
          requires:
            - plan nonprod change
          filters: *on-tag-main

      - deploy-app-version:
          name: deploy nonprod core app version change\
          context: *context
          role: nonprod
          requires:
            - approve nonprod changes
          filters: *on-tag-main

      - validate-app-values-file:
          name: plan prod changes
          context: *context
          role: prod
          filters: *on-tag-main
          requires:
            - approve nonprod changes


      - approve prod changes:
          type: approval
          requires:
            - plan prod change
          filters: *on-tag-main

      - deploy-app-version:
          name: deploy prod core app version change\
          context: *context
          role: prod
          requires:
            - approve prod changes
          filters: *on-tag-main

