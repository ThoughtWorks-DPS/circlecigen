---
version: 2.1

orbs:
  op: twdps/onepassword@1.0.0
  do: twdps/pipeline-events@0.1.0

# ================================================================= global configuration

globals:
  - &context twdps-core-labs-team

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

executors:
  python-builder:
    docker:
      - image: twdps/circleci-python-builder:stable

# ================================================================= commands

commands:

  set-credentials:
    parameters:
      environment:
        description: test or prod
        type: string
        default: test
    steps:
      - when:
          condition:
            equal: [ << parameters.environment >>, "test" ]
          steps:
            - run:
                name: set test.pypi access
                command: |
                  cat \<<EOF > ~/.pypirc
                  [testpypi]
                    username = __token__
                    password = ${PYPI_TEST_API_TOKEN}
                  EOF
      - when:
          condition:
            equal: [ << parameters.environment >>, "prod" ]
          steps:
            - run:
                name: set pypi access
                command: |
                  cat \<<EOF > ~/.pypirc
                  [pypi]
                    username = __token__
                    password = ${PYPI_API_TOKEN}
                  EOF

# ================================================================= jobs


workflows:
  version: 2

  continuation-generated-workflow:
    jobs:
      - terraform/plan:
          name: nonprod-us-west-2 change plan
          context: *context
          workspace: nonprod-us-west-2
          var-file: environments/nonprod-us-west-2.tfvars.json
          before-terraform:
            - set-environment
          filters: *on-tag-main

      - terraform/plan:
          name: nonprod-us-east-2 change plan
          context: *context
          workspace: nonprod-us-east-2
          var-file: environments/nonprod-us-east-2.tfvars.json
          before-terraform:
            - set-environment
          filters: *on-tag-main

      - approve nonprod changes:
          type: approval
          requires:
            - nonprod-us-west-2 change plan
            - nonprod-us-east-2 change plan
          filters: *on-tag-main

      - terraform/apply:
          name: apply nonprod-us-west-2 change plan
          context: *context
          workspace: nonprod-us-west-2
          var-file: environments/nonprod-us-west-2.tfvars.json
          before-terraform:
            - set-environment
          after-terraform:
            - store-system-credentials:
                region: nonprod-us-west-2
            - create-storage-class:
                region-file: nonprod-us-west-2
                workspace: nonprod-us-west-2
          requires:
            - approve nonprod changes

      - terraform/apply:
          name: apply nonprod-us-east-2 change plan
          context: *context
          workspace: nonprod-us-east-2
          var-file: environments/nonprod-us-east-2.tfvars.json
          before-terraform:
            - set-environment
          after-terraform:
            - store-system-credentials:
                region: nonprod-us-east-2
            - create-storage-class:
                region-file: nonprod-us-east-2
                workspace: nonprod-us-east-2
          requires:
            - approve nonprod changes

      - terraform/plan:
          name: prod-us-west-2 change plan
          context: *context
          workspace: prod-us-west-2
          var-file: environments/prod-us-west-2.tfvars.json
          before-terraform:
            - set-environment
          filters: *on-tag-main
          requires:
            - approve nonprod changes


      - terraform/plan:
          name: prod-us-east-2 change plan
          context: *context
          workspace: prod-us-east-2
          var-file: environments/prod-us-east-2.tfvars.json
          before-terraform:
            - set-environment
          filters: *on-tag-main
          requires:
            - approve nonprod changes


      - approve prod changes:
          type: approval
          requires:
            - prod-us-west-2 change plan
            - prod-us-east-2 change plan
          filters: *on-tag-main

      - terraform/apply:
          name: apply prod-us-west-2 change plan
          context: *context
          workspace: prod-us-west-2
          var-file: environments/prod-us-west-2.tfvars.json
          before-terraform:
            - set-environment
          after-terraform:
            - store-system-credentials:
                region: prod-us-west-2
            - create-storage-class:
                region-file: prod-us-west-2
                workspace: prod-us-west-2
          requires:
            - approve prod changes

      - terraform/apply:
          name: apply prod-us-east-2 change plan
          context: *context
          workspace: prod-us-east-2
          var-file: environments/prod-us-east-2.tfvars.json
          before-terraform:
            - set-environment
          after-terraform:
            - store-system-credentials:
                region: prod-us-east-2
            - create-storage-class:
                region-file: prod-us-east-2
                workspace: prod-us-east-2
          requires:
            - approve prod changes

